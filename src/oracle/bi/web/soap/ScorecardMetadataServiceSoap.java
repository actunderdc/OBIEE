
package oracle.bi.web.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ScorecardMetadataServiceSoap", targetNamespace = "urn://oracle.bi.webservices/v12")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ScorecardMetadataServiceSoap {


    /**
     * 
     * @param path
     * @param useDefaultPerspectives
     * @param name
     * @param rootNodeName
     * @param description
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "#createScorecard")
    @WebResult(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
    @RequestWrapper(localName = "createScorecard", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.CreateScorecard")
    @ResponseWrapper(localName = "createScorecardResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.CreateScorecardResult")
    public String createScorecard(
        @WebParam(name = "name", targetNamespace = "urn://oracle.bi.webservices/v12")
        String name,
        @WebParam(name = "description", targetNamespace = "urn://oracle.bi.webservices/v12")
        String description,
        @WebParam(name = "path", targetNamespace = "urn://oracle.bi.webservices/v12")
        String path,
        @WebParam(name = "rootNodeName", targetNamespace = "urn://oracle.bi.webservices/v12")
        String rootNodeName,
        @WebParam(name = "useDefaultPerspectives", targetNamespace = "urn://oracle.bi.webservices/v12")
        boolean useDefaultPerspectives,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param path
     * @param readWrite
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "#openScorecard")
    @WebResult(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
    @RequestWrapper(localName = "openScorecard", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.OpenScorecard")
    @ResponseWrapper(localName = "openScorecardResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.OpenScorecardResult")
    public String openScorecard(
        @WebParam(name = "path", targetNamespace = "urn://oracle.bi.webservices/v12")
        String path,
        @WebParam(name = "readWrite", targetNamespace = "urn://oracle.bi.webservices/v12")
        boolean readWrite,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param scorecardID
     * @param sessionID
     */
    @WebMethod(action = "#closeScorecard")
    @RequestWrapper(localName = "closeScorecard", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.CloseScorecard")
    @ResponseWrapper(localName = "closeScorecardResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.CloseScorecardResult")
    public void closeScorecard(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param edit
     * @param scorecardID
     * @param sessionID
     */
    @WebMethod(action = "#editScorecard")
    @RequestWrapper(localName = "editScorecard", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.EditScorecard")
    @ResponseWrapper(localName = "editScorecardResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.EditScorecardResult")
    public void editScorecard(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "edit", targetNamespace = "urn://oracle.bi.webservices/v12")
        boolean edit,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param scorecardSettings
     * @param causeEffectLinkages
     * @param strategyNodes
     * @param perspectives
     * @param options
     * @param details
     * @param scorecardID
     * @param sessionID
     * @param initiativeNodes
     * @param viewDocuments
     */
    @WebMethod(action = "#getScorecardDetails")
    @RequestWrapper(localName = "getScorecardDetails", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.GetScorecardDetails")
    @ResponseWrapper(localName = "getScorecardDetailsResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.GetScorecardDetailsResult")
    public void getScorecardDetails(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "details", targetNamespace = "urn://oracle.bi.webservices/v12")
        int details,
        @WebParam(name = "options", targetNamespace = "urn://oracle.bi.webservices/v12")
        ScorecardDetailsOptions options,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID,
        @WebParam(name = "scorecardSettings", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<ScorecardSettings> scorecardSettings,
        @WebParam(name = "perspectives", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<PerspectiveList> perspectives,
        @WebParam(name = "strategyNodes", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<StrategyNodeList> strategyNodes,
        @WebParam(name = "initiativeNodes", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<InitiativeNodeList> initiativeNodes,
        @WebParam(name = "causeEffectLinkages", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<CauseAndEffectLinkages> causeEffectLinkages,
        @WebParam(name = "viewDocuments", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<ScorecardViewDocuments> viewDocuments);

    /**
     * 
     * @param scorecardSettings
     * @param scorecardID
     * @param sessionID
     */
    @WebMethod(action = "#updateScorecardSettings")
    @RequestWrapper(localName = "updateScorecardSettings", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateScorecardSettings")
    @ResponseWrapper(localName = "updateScorecardSettingsResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateScorecardSettingsResult")
    public void updateScorecardSettings(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "scorecardSettings", targetNamespace = "urn://oracle.bi.webservices/v12")
        ScorecardSettings scorecardSettings,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param node
     * @param strategyNode
     * @param scorecardID
     * @param sessionID
     * @param nodeID
     */
    @WebMethod(action = "#addStrategyNode")
    @RequestWrapper(localName = "addStrategyNode", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.AddStrategyNode")
    @ResponseWrapper(localName = "addStrategyNodeResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.AddStrategyNodeResult")
    public void addStrategyNode(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "strategyNode", targetNamespace = "urn://oracle.bi.webservices/v12")
        StrategyNode strategyNode,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID,
        @WebParam(name = "nodeID", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<String> nodeID,
        @WebParam(name = "node", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<StrategyNode> node);

    /**
     * 
     * @param strategyNode
     * @param scorecardID
     * @param sessionID
     * @return
     *     returns oracle.bi.web.soap.StrategyNode
     */
    @WebMethod(action = "#updateStrategyNode")
    @WebResult(name = "node", targetNamespace = "urn://oracle.bi.webservices/v12")
    @RequestWrapper(localName = "updateStrategyNode", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateStrategyNode")
    @ResponseWrapper(localName = "updateStrategyNodeResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateStrategyNodeResult")
    public StrategyNode updateStrategyNode(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "strategyNode", targetNamespace = "urn://oracle.bi.webservices/v12")
        StrategyNode strategyNode,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param removeLinkedObject
     * @param scorecardID
     * @param sessionID
     * @param nodeID
     * @param recursive
     */
    @WebMethod(action = "#deleteStrategyNode")
    @RequestWrapper(localName = "deleteStrategyNode", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.DeleteStrategyNode")
    @ResponseWrapper(localName = "deleteStrategyNodeResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.DeleteStrategyNodeResult")
    public void deleteStrategyNode(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "nodeID", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.INOUT)
        Holder<String> nodeID,
        @WebParam(name = "removeLinkedObject", targetNamespace = "urn://oracle.bi.webservices/v12")
        boolean removeLinkedObject,
        @WebParam(name = "recursive", targetNamespace = "urn://oracle.bi.webservices/v12")
        boolean recursive,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param node
     * @param initiativeNode
     * @param scorecardID
     * @param sessionID
     * @param nodeID
     */
    @WebMethod(action = "#addInitiativeNode")
    @RequestWrapper(localName = "addInitiativeNode", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.AddInitiativeNode")
    @ResponseWrapper(localName = "addInitiativeNodeResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.AddInitiativeNodeResult")
    public void addInitiativeNode(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "initiativeNode", targetNamespace = "urn://oracle.bi.webservices/v12")
        InitiativeNode initiativeNode,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID,
        @WebParam(name = "nodeID", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<String> nodeID,
        @WebParam(name = "node", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<InitiativeNode> node);

    /**
     * 
     * @param initiativeNode
     * @param scorecardID
     * @param sessionID
     * @return
     *     returns oracle.bi.web.soap.InitiativeNode
     */
    @WebMethod(action = "#updateInitiativeNode")
    @WebResult(name = "node", targetNamespace = "urn://oracle.bi.webservices/v12")
    @RequestWrapper(localName = "updateInitiativeNode", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateInitiativeNode")
    @ResponseWrapper(localName = "updateInitiativeNodeResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateInitiativeNodeResult")
    public InitiativeNode updateInitiativeNode(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "initiativeNode", targetNamespace = "urn://oracle.bi.webservices/v12")
        InitiativeNode initiativeNode,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param nodeInitiative
     * @param scorecardID
     * @param sessionID
     * @param type
     * @param nodeID
     * @param nodeStrategy
     */
    @WebMethod(action = "#openTreeNode")
    @RequestWrapper(localName = "openTreeNode", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.OpenTreeNode")
    @ResponseWrapper(localName = "openTreeNodeResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.OpenTreeNodeResult")
    public void openTreeNode(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "nodeID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String nodeID,
        @WebParam(name = "type", targetNamespace = "urn://oracle.bi.webservices/v12")
        String type,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID,
        @WebParam(name = "nodeStrategy", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<StrategyNode> nodeStrategy,
        @WebParam(name = "nodeInitiative", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<InitiativeNode> nodeInitiative);

    /**
     * 
     * @param removeLinkedObject
     * @param scorecardID
     * @param sessionID
     * @param nodeID
     * @param recursive
     */
    @WebMethod(action = "#deleteInitiativeNode")
    @RequestWrapper(localName = "deleteInitiativeNode", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.DeleteInitiativeNode")
    @ResponseWrapper(localName = "deleteInitiativeNodeResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.DeleteInitiativeNodeResult")
    public void deleteInitiativeNode(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "nodeID", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.INOUT)
        Holder<String> nodeID,
        @WebParam(name = "removeLinkedObject", targetNamespace = "urn://oracle.bi.webservices/v12")
        boolean removeLinkedObject,
        @WebParam(name = "recursive", targetNamespace = "urn://oracle.bi.webservices/v12")
        boolean recursive,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param perspectiveID
     * @param perspective
     * @param scorecardID
     * @param sessionID
     */
    @WebMethod(action = "#addPerspective")
    @RequestWrapper(localName = "addPerspective", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.AddPerspective")
    @ResponseWrapper(localName = "addPerspectiveResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.AddPerspectiveResult")
    public void addPerspective(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "perspective", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.INOUT)
        Holder<Perspective> perspective,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID,
        @WebParam(name = "perspectiveID", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<String> perspectiveID);

    /**
     * 
     * @param perspective
     * @param scorecardID
     * @param sessionID
     */
    @WebMethod(action = "#updatePerspective")
    @RequestWrapper(localName = "updatePerspective", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdatePerspective")
    @ResponseWrapper(localName = "updatePerspectiveResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdatePerspectiveResult")
    public void updatePerspective(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "perspective", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.INOUT)
        Holder<Perspective> perspective,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param perspectiveID
     * @param scorecardID
     * @param sessionID
     */
    @WebMethod(action = "#deletePerspective")
    @RequestWrapper(localName = "deletePerspective", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.DeletePerspective")
    @ResponseWrapper(localName = "deletePerspectiveResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.DeletePerspectiveResult")
    public void deletePerspective(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "perspectiveID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String perspectiveID,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param scorecardView
     * @param scorecardID
     * @param sessionID
     * @param overwrite
     */
    @WebMethod(action = "#addScorecardView")
    @RequestWrapper(localName = "addScorecardView", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.AddScorecardView")
    @ResponseWrapper(localName = "addScorecardViewResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.AddScorecardViewResult")
    public void addScorecardView(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "scorecardView", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.INOUT)
        Holder<ScorecardView> scorecardView,
        @WebParam(name = "overwrite", targetNamespace = "urn://oracle.bi.webservices/v12")
        Boolean overwrite,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param scorecardView
     * @param scorecardID
     * @param sessionID
     */
    @WebMethod(action = "#updateScorecardView")
    @RequestWrapper(localName = "updateScorecardView", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateScorecardView")
    @ResponseWrapper(localName = "updateScorecardViewResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateScorecardViewResult")
    public void updateScorecardView(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "scorecardView", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.INOUT)
        Holder<ScorecardView> scorecardView,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param path
     * @param scorecardID
     * @param sessionID
     */
    @WebMethod(action = "#deleteScorecardView")
    @RequestWrapper(localName = "deleteScorecardView", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.DeleteScorecardView")
    @ResponseWrapper(localName = "deleteScorecardViewResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.DeleteScorecardViewResult")
    public void deleteScorecardView(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "path", targetNamespace = "urn://oracle.bi.webservices/v12")
        String path,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

    /**
     * 
     * @param causeEffectLinkages
     * @param scorecardID
     * @param sessionID
     * @param failedUpdates
     */
    @WebMethod(action = "#updateCauseAndEffectLinkages")
    @RequestWrapper(localName = "updateCauseAndEffectLinkages", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateCauseAndEffectLinkages")
    @ResponseWrapper(localName = "updateCauseAndEffectLinkagesResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateCauseAndEffectLinkagesResult")
    public void updateCauseAndEffectLinkages(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "causeEffectLinkages", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.INOUT)
        Holder<CauseAndEffectLinkages> causeEffectLinkages,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID,
        @WebParam(name = "failedUpdates", targetNamespace = "urn://oracle.bi.webservices/v12", mode = WebParam.Mode.OUT)
        Holder<CauseAndEffectLinkagesUpdateFailures> failedUpdates);

    /**
     * 
     * @param path
     * @param options
     * @param scorecardID
     * @param id
     * @param acl
     * @param sessionID
     * @param type
     * @return
     *     returns java.util.List<oracle.bi.web.soap.UpdatedScorecardACLItem>
     */
    @WebMethod(action = "#updateScorecardItemACL")
    @WebResult(name = "updatedItem", targetNamespace = "urn://oracle.bi.webservices/v12")
    @RequestWrapper(localName = "updateScorecardItemACL", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateScorecardItemACL")
    @ResponseWrapper(localName = "updateScorecardItemACLResult", targetNamespace = "urn://oracle.bi.webservices/v12", className = "oracle.bi.web.soap.UpdateScorecardItemACLResult")
    public List<UpdatedScorecardACLItem> updateScorecardItemACL(
        @WebParam(name = "scorecardID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String scorecardID,
        @WebParam(name = "type", targetNamespace = "urn://oracle.bi.webservices/v12")
        ScorecardItemType type,
        @WebParam(name = "path", targetNamespace = "urn://oracle.bi.webservices/v12")
        String path,
        @WebParam(name = "id", targetNamespace = "urn://oracle.bi.webservices/v12")
        String id,
        @WebParam(name = "acl", targetNamespace = "urn://oracle.bi.webservices/v12")
        ACL acl,
        @WebParam(name = "options", targetNamespace = "urn://oracle.bi.webservices/v12")
        UpdateCatalogItemACLParams options,
        @WebParam(name = "sessionID", targetNamespace = "urn://oracle.bi.webservices/v12")
        String sessionID);

}
